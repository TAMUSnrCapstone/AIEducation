<!DOCTYPE html>
<html>
  <head>
    <title>AI Results</title>
	<link rel="stylesheet" type="text/css" href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css" />
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
	<script type="text/javascript" src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
	<link rel="stylesheet" type="text/css" href="/stylesheets/style.css" />
    <% include templates/nav.ejs %>
    <link rel='stylesheet' href='/stylesheets/style.css' />
  </head>
  <body>
  	<% include templates/header.ejs %>
  	<div class = "page-wrapper">
	    <h2>Select a Tutorial</h2>

		<a href= "/input_ai"><section class="cf">
			<h2>Beginner</h2>
			<p>Learn how to build one of the most basic examples of game playing Artificial Intelligence using the "greedy search" algorithm to play connect four through our Beginner Tutorial. You will be guided step-by-step on making an AI that can beat an opponent making random decisions.</p>
		</section></a>
		<a href = "/medium_tutorial"><section class="cf">
			<h2>Intermediate</h2>
			<p>This tutorial will teach you how to beat the greedy search algorithm using minimax trees. This tutorial will walk you through the concepts and information needed to build an minimax tree and apply it to our connect four game. A minimax tree can typically beat a human opponent as well.</p>
		</section>
		</a>
		<section class="cf">
			<h2>Expert</h2>
			<p>For our final tutorial, we will polish our minimax tree by making it more efficient using a teqnique called "alpha-beta pruning". This will allow for a deeper search without reaching the time limit and can thus outplay the vanilla minimax tree.</p>
		</section>
	</div>
<% include templates/footer.ejs %>
  </body>
</html>
