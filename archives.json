[{"userName":"A","password":"U2FsdGVkX19GblzXLarVYhuReLVwGcozYcbKaIJRBdg=","rank":3,"code":"function solve(gameBoard2, givenHeight, player,savedHeight) {\r\n\tfunction PlaceChecker(tempBoard,col,player){\r\n\t\tif(tempBoard[0][col]!=0){\r\n\t\t\tgameRow = -1;\r\n\t\t\treturn tempBoard;\r\n\t\t}\r\n\t\tfor(var i = 0; i<6; i++){\r\n\t\t  if(tempBoard[i][col]!=0){\r\n\t\t\tbreak;\r\n\t\t  }\r\n\t\t}\r\n\t\ttempBoard[i-1][col] = player;\r\n\t\tgameRow = i-1;\r\n\t\treturn tempBoard;\r\n\t  }\r\n\r\n\tfunction checkFull(tempBoard)\r\n\t{\r\n\t\tfor(var i=0; i<tempBoard.length; i++)\r\n\t\t{\r\n\t\t\tif(tempBoard[i][5]==0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tfunction checkAdj(a,b,c,d) {\r\n\t\t// Check first cell non-zero and all cells match\r\n\t\treturn ((a != 0) && (a == b) && (a == c) && (a == d));\r\n\t}\r\n\t\r\n\tfunction checkWinner(gameBoard,placedRow,placedColumn) {\r\n\t\t//Vertical\r\n\t\tfor (row = 0; row < 3; row++)\r\n\t\t\tif (checkAdj(gameBoard[row][placedColumn], gameBoard[row+1][placedColumn], gameBoard[row+2][placedColumn], gameBoard[row+3][placedColumn]))\r\n\t\t\t\treturn gameBoard[row][placedColumn];\r\n\t\r\n\t\t//Horizontal\r\n\t\tfor (col = 0; col < 4; col++)\r\n\t\t\tif (checkAdj(gameBoard[placedRow][col], gameBoard[placedRow][col+1], gameBoard[placedRow][col+2], gameBoard[placedRow][col+3]))\r\n\t\t\t\treturn gameBoard[placedRow][col];\r\n\t\r\n\t\t//Down Right\r\n\t\tfor (row = 0; row < 3; row++)\r\n\t\t\tfor (col = 0; col < 4; col++)\r\n\t\t\t\tif (checkAdj(gameBoard[row][col], gameBoard[row+1][col+1], gameBoard[row+2][col+2], gameBoard[row+3][col+3]))\r\n\t\t\t\t\treturn gameBoard[row][col];\r\n\t\r\n\t\t//Down Left\r\n\t\tfor (row = 3; row < 6; row++)\r\n\t\t\tfor (col = 0; col < 4; col++)\r\n\t\t\t\tif (checkAdj(gameBoard[row][col], gameBoard[row-1][col+1], gameBoard[row-2][col+2], gameBoard[row-3][col+3]))\r\n\t\t\t\t\treturn gameBoard[row][col];\r\n\t\r\n\t\treturn 0;\r\n\t}\r\n\tlet Height = givenHeight;\r\n\tlet pos = -1;\r\n\tif(Height > 0) {\r\n\t\tlet min = 99999999;//Not my turn\r\n\t\tif(player == 1) {\r\n\t\t\tfor(let i = 0; i < 7; i++) {\r\n\t\t\t\t//console.log(\"Height P1: \"+Height);\r\n\t\t\t\tlet tempScore = -i;\r\n\t\t\t\tif(i>3)\r\n\t\t\t\t\ttempScore += (i-3)*2;\r\n\t\t\t\tvar tempBoard = [];\r\n\t\t\t\tfor (var j = 0; j < gameBoard2.length; j++)\r\n    \t\t\t\ttempBoard[j] = gameBoard2[j].slice();\r\n\t\t\t\ttempBoard = PlaceChecker(tempBoard,i,1);\r\n\t\t\t\t//console.log(gameBoard2);\r\n\t\t\t\tcheckFull(tempBoard);\r\n\t\t\t\tif(gameRow==-1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif(checkWinner(tempBoard,gameRow,i)==1) {\r\n\t\t\t\t\ttempScore = tempScore - (Height * 7);\r\n\t\t\t\t}\r\n\t\t\t\tlet tempmax = solve(tempBoard,Height-1,2);\r\n\t\t\t\tif(tempScore>0){\r\n\t\t\t\tconsole.log(\"tempScore + max: \"+tempScore + tempmax);\r\n\t\t\t\t}\r\n\t\t\t\tif(tempmax==99999999)\r\n\t\t\t\t{\r\n\t\t\t\t\ttempmax = 0;\r\n\t\t\t\t\tpos = i;\r\n\t\t\t\t}\r\n\t\t\t\tif(min>tempScore+tempmax) {\r\n\t\t\t\t\tmin = tempScore + tempmax;\r\n\t\t\t\t\tpos = i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(Height == savedHeight && player == 1) {\r\n\t\t\t\treturn pos;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn min;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet max = -99999999;//AI Turn\r\n\t\tif(player == 2) {\r\n\t\t\tfor(let i = 0; i < 7; i++) {\r\n\t\t\t\t//console.log(\"Height P2: \"+Height);\r\n\t\t\t\tlet tempScore = i;\r\n\t\t\t\tif(i>3)\r\n\t\t\t\ttempScore -= (i-3)*2;\r\n\t\t\t\tvar tempBoard = [];\r\n\t\t\t\tfor (var j = 0; j < gameBoard2.length; j++)\r\n    \t\t\t\ttempBoard[j] = gameBoard2[j].slice();\r\n\t\t\t\ttempBoard = PlaceChecker(tempBoard,i,2);\r\n\t\t\t\t//console.log(gameBoard2);\r\n\t\t\t\tif(gameRow==-1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif(checkWinner(tempBoard,gameRow,i)==2) {\r\n\t\t\t\t\ttempScore = tempScore + (Height * 7);\r\n\t\t\t\t\t//console.log(\"YAYYYYY\");\r\n\t\t\t\t}\r\n\t\t\t\tlet tempmin = solve(tempBoard,Height-1,1);\r\n\t\t\t\tif(tempScore<0){\r\n\t\t\t\tconsole.log(\"tempScore + min: \"+tempScore + tempmin);\r\n\t\t\t\t}\r\n\t\t\t\tif(tempmin==-99999999)\r\n\t\t\t\t{\r\n\t\t\t\t\ttempmin = 0;\r\n\t\t\t\t\tpos = i;\r\n\t\t\t\t}\r\n\t\t\t\tif(tempScore+tempmin>max) {\r\n\t\t\t\t\tmax=tempScore+tempmin;\r\n\t\t\t\t\tpos=i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(Height == savedHeight && player == 2) {\r\n\t\t\t\treturn pos;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn max;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\nlet savedHeight = 3;\r\nreturn solve(boardState,savedHeight,playerNumber,savedHeight);"},{"userName":"bobby","password":"U2FsdGVkX1/R5cJWx4Y44bP91kl50SyuLcW3R7cCUG8=","rank":-1,"code":"return 3;"},{"userName":"B","password":"U2FsdGVkX1+6p1sQZ6ZMqDC8VjUAfx55FXPFiG58lV8=","rank":0,"code":"Now Starting Fight: PlayerCode vs bobby\nPlayerCode will go first. Start! \n \n\nTurn: 1\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 \n\nTurn: 2\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n1 0 0 2 0 0 0 \n\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 \n1 0 0 2 0 0 0 \n\nTurn: 3\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n1 0 0 2 0 0 0 \n1 0 0 2 0 0 0 \n\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 \n1 0 0 2 0 0 0 \n1 0 0 2 0 0 0 \n\nTurn: 4\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n1 0 0 2 0 0 0 \n1 0 0 2 0 0 0 \n1 0 0 2 0 0 0 \n\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 \n1 0 0 2 0 0 0 \n1 0 0 2 0 0 0 \n1 0 0 2 0 0 0 \n\nWINNER WINNER CHICKEN DINNER: PlayerCode!!!\n\nNow Starting Fight: bobby vs PlayerCode\nbobby will go first. Start! \n \n\nTurn: 1\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 1 0 0 0 \n\nTurn: 2\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n2 0 0 1 0 0 0 \n\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 1 0 0 0 \n2 0 0 1 0 0 0 \n\nTurn: 3\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n2 0 0 1 0 0 0 \n2 0 0 1 0 0 0 \n\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 1 0 0 0 \n2 0 0 1 0 0 0 \n2 0 0 1 0 0 0 \n\nTurn: 4\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n2 0 0 1 0 0 0 \n2 0 0 1 0 0 0 \n2 0 0 1 0 0 0 \n\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 1 0 0 0 \n2 0 0 1 0 0 0 \n2 0 0 1 0 0 0 \n2 0 0 1 0 0 0 \n\nWINNER WINNER CHICKEN DINNER: bobby!!!\n\nNow Starting Fight: PlayerCode vs A\nPlayerCode will go first. Start! \n \n\nTurn: 1\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 \n\nTurn: 2\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n1 0 2 0 0 0 0 \n\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 \n1 0 2 0 0 0 0 \n\nTurn: 3\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n1 0 2 0 0 0 0 \n1 0 2 0 0 0 0 \n\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 \n1 0 2 0 0 0 0 \n1 0 2 0 0 0 0 \n\nTurn: 4\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n1 0 2 0 0 0 0 \n1 0 2 0 0 0 0 \n1 0 2 0 0 0 0 \n\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 \n1 0 2 0 0 0 0 \n1 0 2 0 0 0 0 \n1 0 2 0 0 0 0 \n\nWINNER WINNER CHICKEN DINNER: PlayerCode!!!\n\nNow Starting Fight: A vs PlayerCode\nA will go first. Start! \n \n\nTurn: 1\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 1 0 0 0 0 \n\nTurn: 2\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n2 0 1 0 0 0 0 \n\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 1 0 0 0 0 \n2 0 1 0 0 0 0 \n\nTurn: 3\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n2 0 1 0 0 0 0 \n2 0 1 0 0 0 0 \n\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 1 0 0 0 0 \n2 0 1 0 0 0 0 \n2 0 1 0 0 0 0 \n\nTurn: 4\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n2 0 1 0 0 0 0 \n2 0 1 0 0 0 0 \n2 0 1 0 0 0 0 \n\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 1 0 0 0 0 \n2 0 1 0 0 0 0 \n2 0 1 0 0 0 0 \n2 0 1 0 0 0 0 \n\nWINNER WINNER CHICKEN DINNER: A!!!\n\nNow Starting Fight: PlayerCode vs null\nPlayerCode will go first. Start! \n \n\nTurn: 1\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 \n\nP2 attempted to place at slot undefined ,but this is already full\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 \n\nWINNER WINNER CHICKEN DINNER: PlayerCode!!!\n\nNow Starting Fight: null vs PlayerCode\nnull will go first. Start! \n \n\nTurn: 1\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n\nP1 attempted to place at slot undefined, but this is already full\n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n\nWINNER WINNER CHICKEN DINNER: PlayerCode!!!\n\n"}]